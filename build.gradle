buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'
    }
}

allprojects {
    repositories {
        mavenCentral()
    }
}

apply plugin: 'com.android.application'

android {
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/ASL2.0'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    compileSdkVersion 24
    buildToolsVersion "24.0.2"
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 18
        versionCode 2
        versionName "1.0.0-SNAPSHOT"
        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
        multiDexEnabled true
    }

    dexOptions {
        javaMaxHeapSize "2g"
        jumboMode true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFile 'proguard-android.txt'
        }

        debug {
            debuggable true
        }
    }
}

repositories {
    flatDir {
        dirs 'lib'
    }
}
dependencies {
    repositories {
        mavenCentral()
        jcenter()
    }
    if (file('lib/sharethrough-android-sdk.aar').isFile()) {
        compile(name: 'sharethrough-android-sdk', ext: 'aar')
    } else {
        println('[[WARNING: Using Sharethrough SDK as a project dependency bc no SDK .aar file is available]]')
        compile project(':sdk')
    }
    compile 'com.android.volley:volley:1.0.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.google.android.gms:play-services:10.0.1'
    compile 'com.android.support:multidex:1.0.0'
    compile 'com.android.support:cardview-v7:24.+'
    compile 'com.android.support:recyclerview-v7:24.+'
    compile 'com.google.code.gson:gson:2.5'
}
tasks.whenTaskAdded { theTask ->
    def taskName = theTask.name.toString()
    if (taskName == "test") {
        theTask.dependsOn 'copyTestAssets'
    }
}

task copyTestAssets(type: Copy) {
    from('src/test/assets/')
    into 'build/test-classes/assets/'
}

